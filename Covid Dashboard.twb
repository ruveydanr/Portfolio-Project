<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='CovidDashboard_17370592151970' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='sql1table (sql1_table)' inline='true' name='federated.0game9h0skytre16wrt5d1ma8gd4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='sql1_table' name='excel-direct.0ossw3101wg5cw13h4b0o1tfl8sj'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ruvey/Desktop/Portfolyo/Project/sql1_table.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0ossw3101wg5cw13h4b0o1tfl8sj' name='sql1table' table='[sql1table$]' type='table'>
          <columns gridOrigin='A1:F10001:no:A1:F2147483647:0' header='yes' outcome='6'>
            <column datatype='string' name='continent' ordinal='0' />
            <column datatype='string' name='location' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='population' ordinal='3' />
            <column datatype='integer' name='new_vaccinations' ordinal='4' />
            <column datatype='integer' name='Vaccination_by_location' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[sql1table]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[sql1table]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[sql1table]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[sql1table]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations]</local-name>
            <parent-name>[sql1table]</parent-name>
            <remote-alias>new_vaccinations</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vaccination_by_location</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Vaccination_by_location]</local-name>
            <parent-name>[sql1table]</parent-name>
            <remote-alias>Vaccination_by_location</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[sql1table]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F10001:no:A1:F2147483647:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='sql1table' datatype='table' name='[__tableau_internal_object_id__].[sql1table_0106F042E7D14C618BDC5618B22060CE]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/ruvey/AppData/Local/Temp/TableauTemp/#TableauTemp_0pq9k1m1dbuwnx12gvu9r0dp5isq.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='01/16/2025 03:33:23 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>continent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[continent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>continent</remote-alias>
              <ordinal>0</ordinal>
              <family>sql1table</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LTR_RTR' />
              <object-id>[sql1table_0106F042E7D14C618BDC5618B22060CE]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>1</ordinal>
              <family>sql1table</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>160</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LTR_RTR' />
              <object-id>[sql1table_0106F042E7D14C618BDC5618B22060CE]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>sql1table</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>970</approx-count>
              <contains-null>true</contains-null>
              <object-id>[sql1table_0106F042E7D14C618BDC5618B22060CE]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>3</ordinal>
              <family>sql1table</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>160</approx-count>
              <contains-null>true</contains-null>
              <object-id>[sql1table_0106F042E7D14C618BDC5618B22060CE]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_vaccinations</remote-name>
              <remote-type>20</remote-type>
              <local-name>[new_vaccinations]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_vaccinations</remote-alias>
              <ordinal>4</ordinal>
              <family>sql1table</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6768</approx-count>
              <contains-null>true</contains-null>
              <object-id>[sql1table_0106F042E7D14C618BDC5618B22060CE]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Vaccination_by_location</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Vaccination_by_location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Vaccination_by_location</remote-alias>
              <ordinal>5</ordinal>
              <family>sql1table</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2873</approx-count>
              <contains-null>true</contains-null>
              <object-id>[sql1table_0106F042E7D14C618BDC5618B22060CE]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Turkey&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <object-graph>
        <objects>
          <object caption='sql1table' id='sql1table_0106F042E7D14C618BDC5618B22060CE'>
            <properties context=''>
              <relation connection='excel-direct.0ossw3101wg5cw13h4b0o1tfl8sj' name='sql1table' table='[sql1table$]' type='table'>
                <columns gridOrigin='A1:F10001:no:A1:F2147483647:0' header='yes' outcome='6'>
                  <column datatype='string' name='continent' ordinal='0' />
                  <column datatype='string' name='location' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='population' ordinal='3' />
                  <column datatype='integer' name='new_vaccinations' ordinal='4' />
                  <column datatype='integer' name='Vaccination_by_location' ordinal='5' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau_data_1)' inline='true' name='federated.0k5pxyb0ssovd71fb5vz004ftw2x' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau_data_1' name='excel-direct.11k6go01lapxae1dg3yi20l8l4ap'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ruvey/Desktop/Portfolyo/TableAU_data/Tableau_data_1.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.11k6go01lapxae1dg3yi20l8l4ap' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='Total_cases' ordinal='0' />
            <column datatype='integer' name='Total_deaths' ordinal='1' />
            <column datatype='real' name='CaseDeathPercentage' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_2E76434B3CEE48D2B0481BA182775C61]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_2E76434B3CEE48D2B0481BA182775C61]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CaseDeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CaseDeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CaseDeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_2E76434B3CEE48D2B0481BA182775C61]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='DeathPercentage' datatype='real' name='[CaseDeathPercentage]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_2E76434B3CEE48D2B0481BA182775C61]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/ruvey/AppData/Local/Temp/TableauTemp/#TableauTemp_0nhhfa81t5rf1s1choj6y1yf3u3z.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='01/16/2025 04:37:09 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CaseDeathPercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[CaseDeathPercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CaseDeathPercentage</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Turkey&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_2E76434B3CEE48D2B0481BA182775C61'>
            <properties context=''>
              <relation connection='excel-direct.11k6go01lapxae1dg3yi20l8l4ap' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Total_cases' ordinal='0' />
                  <column datatype='integer' name='Total_deaths' ordinal='1' />
                  <column datatype='real' name='CaseDeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau_data_2)' inline='true' name='federated.0mvqu0m1tuyu5918z5av51r1r41u' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau_data_2' name='excel-direct.1i7ekxj1b7gjcy18zkihc1ieu1oj'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ruvey/Desktop/Portfolyo/TableAU_data/Tableau_data_2.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1i7ekxj1b7gjcy18zkihc1ieu1oj' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_CD076CC6F3044DFBBB529560D139066F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_CD076CC6F3044DFBBB529560D139066F]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_CD076CC6F3044DFBBB529560D139066F]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/ruvey/AppData/Local/Temp/TableauTemp/#TableauTemp_14oudka0xm1uiy10kg98w0fkhgra.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='01/16/2025 05:42:32 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LTR_RTR' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalDeathCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalDeathCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalDeathCount</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='jewel_bright_10_0' type='palette'>
            <map to='#5fbb68'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#64cdcc'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#eb1e2c'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#f9a729'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#f9d23c'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#fd6f30'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Turkey&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_CD076CC6F3044DFBBB529560D139066F'>
            <properties context=''>
              <relation connection='excel-direct.1i7ekxj1b7gjcy18zkihc1ieu1oj' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau_data_3)' inline='true' name='federated.0ydd3bx1nyl7hw1br8zy20wqk9hj' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau_data_3' name='excel-direct.0s6yzcu1hzpovo17gpwyb0p5jbuv'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ruvey/Desktop/Portfolyo/TableAU_data/Tableau_data_3.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0s6yzcu1hzpovo17gpwyb0p5jbuv' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D219:no:A1:D219:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D219:no:A1:D219:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_459858AE08284EA89F7159B11C5417A7]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_459858AE08284EA89F7159B11C5417A7]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_459858AE08284EA89F7159B11C5417A7]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_459858AE08284EA89F7159B11C5417A7]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_459858AE08284EA89F7159B11C5417A7]' role='measure' type='quantitative' />
      <column datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/ruvey/AppData/Local/Temp/TableauTemp/#TableauTemp_13uwx8107ywwgb0zu4smx0osb1m8.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='01/16/2025 04:23:20 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>218</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LTR_RTR' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>217</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>198</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>149</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Turkey&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_459858AE08284EA89F7159B11C5417A7'>
            <properties context=''>
              <relation connection='excel-direct.0s6yzcu1hzpovo17gpwyb0p5jbuv' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D219:no:A1:D219:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau_data_4)' inline='true' name='federated.1qm6haj1swa0sp16cdb8b0a1xwrk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau_data_4' name='excel-direct.0qn047w13k2fh9192i8u301y6ozu'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ruvey/Desktop/Portfolyo/TableAU_data/Tableau_data_4.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0qn047w13k2fh9192i8u301y6ozu' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_1A15A7BC9ED443E49A498E9EAE8C03DE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_1A15A7BC9ED443E49A498E9EAE8C03DE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_1A15A7BC9ED443E49A498E9EAE8C03DE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_1A15A7BC9ED443E49A498E9EAE8C03DE]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_1A15A7BC9ED443E49A498E9EAE8C03DE]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_1A15A7BC9ED443E49A498E9EAE8C03DE]' role='measure' type='quantitative' />
      <column datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/ruvey/AppData/Local/Temp/TableauTemp/#TableauTemp_1imhpj103wqzs319q36sm1twvq7e.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='01/16/2025 04:23:30 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>311</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LTR_RTR' />
              <object-id>[Sheet1_1A15A7BC9ED443E49A498E9EAE8C03DE]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>310</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_1A15A7BC9ED443E49A498E9EAE8C03DE]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1271</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_1A15A7BC9ED443E49A498E9EAE8C03DE]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17659</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_1A15A7BC9ED443E49A498E9EAE8C03DE]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1804</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_1A15A7BC9ED443E49A498E9EAE8C03DE]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Turkey&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_1A15A7BC9ED443E49A498E9EAE8C03DE'>
            <properties context=''>
              <relation connection='excel-direct.0qn047w13k2fh9192i8u301y6ozu' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau_data_1)' name='federated.0k5pxyb0ssovd71fb5vz004ftw2x' />
          </datasources>
          <datasource-dependencies datasource='federated.0k5pxyb0ssovd71fb5vz004ftw2x'>
            <column caption='DeathPercentage' datatype='real' name='[CaseDeathPercentage]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total_cases]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total_deaths]' role='measure' type='quantitative' />
            <column-instance column='[CaseDeathPercentage]' derivation='Sum' name='[sum:CaseDeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total_cases]' derivation='Sum' name='[sum:Total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total_deaths]' derivation='Sum' name='[sum:Total_deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0k5pxyb0ssovd71fb5vz004ftw2x].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0k5pxyb0ssovd71fb5vz004ftw2x].[sum:CaseDeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0k5pxyb0ssovd71fb5vz004ftw2x].[sum:Total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0k5pxyb0ssovd71fb5vz004ftw2x].[sum:Total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0k5pxyb0ssovd71fb5vz004ftw2x].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0k5pxyb0ssovd71fb5vz004ftw2x].[sum:Total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.0k5pxyb0ssovd71fb5vz004ftw2x].[sum:Total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0k5pxyb0ssovd71fb5vz004ftw2x].[sum:CaseDeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0k5pxyb0ssovd71fb5vz004ftw2x].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0k5pxyb0ssovd71fb5vz004ftw2x].[:Measure Names]' value='181' />
            <format attr='height' value='66' />
            <format attr='font-weight' data-class='total' scope='cols' value='bold' />
            <format attr='color' data-class='subtotal' scope='cols' value='#000000' />
            <format attr='font-size' data-class='subtotal' scope='cols' value='12' />
            <format attr='font-weight' data-class='subtotal' scope='cols' value='bold' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#c0c0c0' />
            <format attr='border-width' value='1' />
            <format attr='text-format' field='[federated.0k5pxyb0ssovd71fb5vz004ftw2x].[sum:CaseDeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0k5pxyb0ssovd71fb5vz004ftw2x].[:Measure Names]' value='28' />
            <format attr='width-header' value='20' />
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='color' data-class='total' scope='cols' value='#000000' />
            <format attr='font-size' data-class='total' scope='cols' value='16' />
            <format attr='font-weight' data-class='total' scope='cols' value='bold' />
            <format attr='border-color' value='#c0c0c0' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
            <format attr='font-size' data-class='subtotal' scope='cols' value='11' />
            <format attr='background-color' scope='cols' value='#5dd0f0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' scope='cols' value='#000000' />
            <format attr='font-size' scope='cols' value='10' />
            <format attr='font-weight' scope='cols' value='normal' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' value='#c0c0c0' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0k5pxyb0ssovd71fb5vz004ftw2x].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.8350828886032104' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0k5pxyb0ssovd71fb5vz004ftw2x].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{1D45BD4D-753C-4F49-9D84-3722C53835C4}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Total Death Per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau_data_2)' name='federated.0mvqu0m1tuyu5918z5av51r1r41u' />
          </datasources>
          <datasource-dependencies datasource='federated.0mvqu0m1tuyu5918z5av51r1r41u'>
            <column datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0mvqu0m1tuyu5918z5av51r1r41u].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0mvqu0m1tuyu5918z5av51r1r41u].[sum:TotalDeathCount:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0mvqu0m1tuyu5918z5av51r1r41u].[none:location:nk]' value='128' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0mvqu0m1tuyu5918z5av51r1r41u].[none:location:nk]' />
              <text column='[federated.0mvqu0m1tuyu5918z5av51r1r41u].[sum:TotalDeathCount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2303867340087891' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mvqu0m1tuyu5918z5av51r1r41u].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.0mvqu0m1tuyu5918z5av51r1r41u].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{35FDA641-6355-4E26-8BAF-FEF9990CD48D}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Percent Population Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau_data_3)' name='federated.0ydd3bx1nyl7hw1br8zy20wqk9hj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ydd3bx1nyl7hw1br8zy20wqk9hj'>
            <column datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ydd3bx1nyl7hw1br8zy20wqk9hj].[Longitude (generated)]' field-type='quantitative' max='22026216.028296031' min='-17176931.387998316' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0ydd3bx1nyl7hw1br8zy20wqk9hj].[Latitude (generated)]' field-type='quantitative' max='12622650.585545432' min='-8396095.0340241157' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ydd3bx1nyl7hw1br8zy20wqk9hj].[sum:PercentPopulationInfected:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0ydd3bx1nyl7hw1br8zy20wqk9hj].[sum:PercentPopulationInfected:qk]' value='PercentPopulationInfected'>
              <formatted-text>
                <run>PercentPopulationInfected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0ydd3bx1nyl7hw1br8zy20wqk9hj].[none:location:nk]' />
              <color column='[federated.0ydd3bx1nyl7hw1br8zy20wqk9hj].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.0ydd3bx1nyl7hw1br8zy20wqk9hj].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.33983424305915833' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ydd3bx1nyl7hw1br8zy20wqk9hj].[Latitude (generated)]</rows>
        <cols>[federated.0ydd3bx1nyl7hw1br8zy20wqk9hj].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D3E53678-7799-40AD-9681-94B721D3B90D}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Percent Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau_data_4)' name='federated.1qm6haj1swa0sp16cdb8b0a1xwrk' />
          </datasources>
          <datasource-dependencies datasource='federated.1qm6haj1swa0sp16cdb8b0a1xwrk'>
            <column datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qm6haj1swa0sp16cdb8b0a1xwrk].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1qm6haj1swa0sp16cdb8b0a1xwrk].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1qm6haj1swa0sp16cdb8b0a1xwrk].[tmn:date:qk]' scope='cols' value='Month' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1qm6haj1swa0sp16cdb8b0a1xwrk].[tmn:date:qk]' value='102' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1qm6haj1swa0sp16cdb8b0a1xwrk].[none:location:nk]' />
              <text column='[federated.1qm6haj1swa0sp16cdb8b0a1xwrk].[none:location:nk]' />
              <color column='[federated.1qm6haj1swa0sp16cdb8b0a1xwrk].[none:Forecast Indicator:nk]' />
              <text column='[federated.1qm6haj1swa0sp16cdb8b0a1xwrk].[fVal:avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1qm6haj1swa0sp16cdb8b0a1xwrk].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.1qm6haj1swa0sp16cdb8b0a1xwrk].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{A409D6ED-D7AE-4859-90CD-E98FD9422020}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98002' id='9' param='horz' type-v2='layout-flow' w='99016' x='492' y='999'>
            <zone h='98002' id='7' type-v2='layout-basic' w='99016' x='492' y='999'>
              <zone h='22347' id='3' name='Sheet 1' w='40565' x='492' y='999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='30212' id='5' name='Sheet 2' w='40565' x='492' y='23346'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='52559' id='6' name='Sheet 3' w='47532' x='41057' y='999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='45443' id='11' name='Sheet 4' w='88076' x='492' y='53558'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='45443' id='12' name='Sheet 4' pane-specification-id='0' param='[federated.1qm6haj1swa0sp16cdb8b0a1xwrk].[none:location:nk]&#10;[federated.1qm6haj1swa0sp16cdb8b0a1xwrk].[none:Forecast Indicator:nk]' type-v2='color' w='10940' x='88568' y='53558'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='52559' id='10' name='Sheet 3' pane-specification-id='0' param='[federated.0ydd3bx1nyl7hw1br8zy20wqk9hj].[sum:PercentPopulationInfected:qk]' type-v2='color' w='10919' x='88589' y='999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='16' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98002' id='15' param='vert' type-v2='layout-flow' w='99016' x='492' y='999'>
                <zone fixed-size='171' h='22347' id='3' is-fixed='true' name='Sheet 1' w='40565' x='492' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52559' id='6' is-fixed='true' name='Sheet 3' w='47532' x='41057' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='52559' id='10' name='Sheet 3' pane-specification-id='0' param='[federated.0ydd3bx1nyl7hw1br8zy20wqk9hj].[sum:PercentPopulationInfected:qk]' type-v2='color' w='10919' x='88589' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='233' h='30212' id='5' is-fixed='true' name='Sheet 2' w='40565' x='492' y='23346'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45443' id='11' is-fixed='true' name='Sheet 4' w='88076' x='492' y='53558'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='45443' id='12' name='Sheet 4' pane-specification-id='0' param='[federated.1qm6haj1swa0sp16cdb8b0a1xwrk].[none:location:nk]&#10;[federated.1qm6haj1swa0sp16cdb8b0a1xwrk].[none:Forecast Indicator:nk]' type-v2='color' w='10940' x='88568' y='53558'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E52626B3-214D-4B85-A1BC-217AF5EF3E2A}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='141'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0k5pxyb0ssovd71fb5vz004ftw2x].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{698C0D17-82CD-4E26-900E-B41B3CE0E075}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0mvqu0m1tuyu5918z5av51r1r41u].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0266oox07ejmzx1ahq03h14gkjfq].[none:location:nk]</field>
            <field>[federated.0mvqu0m1tuyu5918z5av51r1r41u].[none:location:nk]</field>
            <field>[federated.14efjaq04avjli11ld54w1ve7xdu].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0A240F7D-0C96-4E1E-83A2-87F84B4D3649}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ydd3bx1nyl7hw1br8zy20wqk9hj].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ydd3bx1nyl7hw1br8zy20wqk9hj].[none:location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{6C8A1EB5-C2A9-4459-95C2-14761339493C}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1qm6haj1swa0sp16cdb8b0a1xwrk].[none:location:nk]&#10;[federated.1qm6haj1swa0sp16cdb8b0a1xwrk].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qm6haj1swa0sp16cdb8b0a1xwrk].[none:Forecast Indicator:nk]</field>
            <field>[federated.1qm6haj1swa0sp16cdb8b0a1xwrk].[none:location:nk]</field>
            <field>[federated.1qm6haj1swa0sp16cdb8b0a1xwrk].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{372686D6-04BB-4B06-AA58-81B7E9AA9C6E}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1qm6haj1swa0sp16cdb8b0a1xwrk].[none:Forecast Indicator:nk]</field>
              <field>[federated.1qm6haj1swa0sp16cdb8b0a1xwrk].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{E554116F-E33A-456F-B57B-3C0DCF856310}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='98' name='Sheet 1' width='192'>
      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
      gijEH5DeAKSnp9O1a9fXUYsQr0V4eHj+mJYpkFA1CYBQNQmAUDUJgFA1CYBQNQmAUDUJgFA1
      CYBQNQmAUDUJgFA1CYBQNQmAUDUJgFA1CYBQNQmAUDUJgFA1CYBQNQmAUDUJgFA1CYBQNQmA
      UDUJgFA1CYBQNQmAUDUJgFA1+YCMF5ZFUsQ2/Bb7cb13EMEe9YtooyVsZjum7y/q9/uxJOJz
      uhRsnRDGopkL2HPuPpkVLWjQcRQ+Ph78pYoh9Ri2rdhAd9xWXimhn6ZM3BKMbneyuHU0hHUh
      e/nxUiyJadlQ0YJaDp0ZOXEybq2qGTyQtBnRHAqYz/KNNkz/6en9LiwrKYJtfovxu96boGAP
      njmy2vtc3ruRr7ft4dy129zPBCpVo4ljH8bMmECvuno+IxUJwAvIG/hfcVTjwuDGllwvtu1N
      YqJsGL12FxOa6ek2Npgx766llncA+1c1xOxxEkeXT8Dzb0n47Z6Gk96/mGHbqu8RTIRH0c+l
      759Oz4DGtM8bcbEhfOZ/nS7j5xLk1ICqZhrISiUqfDkzxg/j4n828XmXktOZP/B3JmH/bnts
      sjOKbZs38L86qsFlcGMsizuwx79g6q7KeHr542NnSxUT0GYkELlpHjOHjOV28Dd4NNJzwBQ9
      Dh8+rK+JOsUEKZPGLlFCb6Qr2YqixKwZrgxfE1N02+wfFG8nL2X3b/o6/U3ZN62d8le/C0r2
      U48/VHZ7tSu+/1Jtqzgxyprh7ZRp+wp0kJ1dqJ4Cle38UHEat1lJ1tNr+Lx3lVnfnVQSf1cU
      RQlXfJx8lPBith80aayyJPSGkq47sMrw4WuUIve82LqylbPL3la6LYwo8tmCY1rOAKVV351l
      qwxsezOGKJtGuJvraZceTmhYc4bublbo1FwFl4EuzAk4TKxHEVOB0myrGNoTIQQmv8OiHgU6
      0GiKnSqYmVeGjEc80tNvlxkhJU53nqiPu6EHtti6NFS2MCMz/ne9Xcgi+DXQxlznul3Dkgcu
      QGw0V21a4Vjr2ac0zf9CyytXua599rlSbatIiez4dgeN/jHSgKkWoL1BcOAR2gzoiZ6P4329
      Uo8QuCGFd/q21dtUzgCvQWJCHIT70NXZJ/eRSlRr4kifMTOY0Kvuk8//TU4ioUojinzxtqpB
      TWK4FQ8ljW6Dt1UE7cXNBF8ZyMcri0hgAVmpcVwN38SKgJ3k9P+CpW4lt389tGQ8iOHUzrX4
      rzlNw2lrmGJAiiUAr0Ed90Ai3It4IjWMmd09sFwUxjSnMt7W1QCGjInF8+BC2uoZFUYacywb
      OtKx9QnW7PqOYwOa0demrIeSBo2xJTbNW9D2jdPs3LKTi5089V45kylQWarShR7tUzl/OV73
      c/Wa2KT+RnpRbe/dJYkG1C3tXKPwtp6SzpHgDTDqn7gasHbQmFXFtkVPPGavY8ukCvhO+Iar
      pSzrZTKpUp0mzkOYsmorAW8dwXPu/qKPZQESgHLAzNRU942dI62Tz/Br4rNttBfOEdnUjsYv
      +EKbv62CEr9nbWhT3AfZPWdvGqr1cqXzzSP8FPtidb1cJti5utAo7Din9LSUALxyVzhx/D5F
      rl1TQ9kd1pR2zla6nzVOdOh8gQ2bLxZqn0rojlCaD+itZ3H7HNvKp+XEtwHcGDiagcVM5bOy
      sorfZGIC8RXrYF29xMJeAS1ZWcVfEdAmJpBQrzbWenqRALxyj/hl3kAGTQ7gaNQDMrQAWaRG
      7cJ7+HyuDJjA4PxRbY7rR1OpFTQF713RurZZSRxdNIb5t0bhVWixeeRTZ5zdA4kt1bZyJe7g
      2x2N8BzdttgF4c//7sEwn0AOno8jNS8L2gwSzm/Ee4wf2ePG8eSqaSyB7s44f3qkdIfLYPGE
      jB3Ee0s3EpG/r+jeoDu6DM+PDtF58jD0ndPKeuXyh1X0rQRuOK/M+z7vtoM3mbh9P28fCmDR
      J0PxjrpPJhWxaNCKAZPWs7XwlZlabqzcWpVFMz1x/fzJrRBffO1BM71/refcFloubg7mistk
      fEu4kNNl5noqhKwjZO54Fsbn3nKQeyvEkH+t57POdfUMpCN86uzF7kKP7nZ+8kjTiVt0t5HE
      BuLutpJnjuyTA0u/JRF83qU+7kt9qbbxa/y9Aom+m0haNvm3QrivDqGPvf57RyooiqKU1KDg
      J+oJ8b9APiVSiFwSAKFqEgChahIAoWoSAKFqEgChahIAoWoSAKFqEgChahIAoWoSAKFqEgCh
      ahIAoWoSAKFqEgChahIAoWoSAKFqEgChahIAoWoSAKFqEgChahIAoWr/D+aahe9hQsfrAAAA
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      jwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
